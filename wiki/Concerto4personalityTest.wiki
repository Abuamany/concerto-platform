#summary This tutorial helps the reader to deepen his or her understanding of Concerto v4 by creating a personality test (nonadaptive).

= Introduction =

This tutorial intends to help you create a psychological test (non-adaptive) with Concerto. By taking the reader through the entire process of implementing a test – from analyzing the test and determining what type of pages and data tables are required, over creating both templates and tables, to writing the test logic in R – his or her understanding of R and the Concerto platform should be furthered.
It is assumed that the reader already familiarized him- or herself with the Concerto platform (i.e. took one of the simple tutorials) and has a basic understanding of R or any other experience in programming/scripting languages
The test that will be implemented in this tutorial is the Big Five Personality Test. It consists of 50 Questions that can be answered on a five point Likert scale, with options ranging from “disagree” to “agree”. A sample can be accessed at http://personality-testing.info/print/big-five-personality-test.pdf
In addition to the test itself, three demographical variables are going to be assessed: age, gender, and occupation. At the end of the test, the participant will be informed of his or her result, along with an explanation of these results.


= Preparation =
== Pages ==

In order to create this test on Concerto, it needs to be considered what type of pages needs to be shown to a participant to fulfill the requirements above.
  # Introductory page: upon starting the test, the participant should see some introductory words about the test. At the same page he or she can enter the demographic information
  # Question page: the test itself consists of 50 questions that need to be asked. Therefore there needs to be a page where the questions are asked
  # Result/Goodbye page:  once a participant answered all questions, his or her results are going to be shown to him, along with an explanation
Therefore, we already know that three pages are required.  The next step is to determine, what kind of data is going to be used in the test.

== Data/Tables ==

The only input that comes from the database, are 
  * the questions
  * their scoring information

Data that is going to be stored in the tables are
  * the demographical data
  * the responses to each question
  * the final scores
Data that is going to be stored in the tables are
  * the demographical data
  * the responses to each question
  * the final scores
It is sensible to store the final scores as well as the demographical data together, and the single response to each question separately. Summarizing, there will be the following tables:
  * a table containing the questions and their scoring information
  * a table containing the demographical data and the final scores
  * a table containing item-level data (i.e. response to each question)
After determining how many tables and pages are required to administer the test, it is advisable to think of the rough structure of the test in terms of administration.
Test administration
It is assumed, for this tutorial, that all questions have to be answered and all demographic information has to be filled in. 
  # show the introductory page to the participant
    # participant fills in demographic data and presses OK: continue
    # participant does not fill in demographic data and presses OK: do nothing
  # show the question page and ask the ‘next’ question (if available)
    # participant chooses an answer and presses OK: continue
    # participant does not choose an answer and presses OK: repeat question
  # once the participant answered all questions, calculate the scores
  # show the result page along with the explanations
This list should help in terms of how to write the actual R code to administer the test exactly as is required. Together with the previous points, it is now possible to set up the tables, the pages, and start to structure the test-logic file. The next section explains step by step how to do these things, which are summarized in the list below:
  *create tables holding 
    * the questions
    * result & demographic data
    * question responses
  *create pages
    * introduction/demographic page
    * question page
    * result page
  *structure test logic file
= Creating the pages (HTML templates) =
Welcome/demographics page
  * go to HTML template tab
 
  * Make sure you are on list of available objects section
 
  * Click the add new object button
 
  * Enter introduction as the name for your welcome/demographics page and click the save button.
 
You now created a new and empty template. As established above, it should contain an introduction, as well as the possibility for the participant to enter his or her demographical information.
In order to display the introduction, just type into the editor on screen and format the text as necessary. 
 After doing so, the next steps will explain how to add the objects that will be used to ask the participant the demographic information.
  * Gender will be indicated by pressing one of two radio buttons (male/female)
  * Age will be indicated by a number entered by the participant in a text field
  * Occupation will be indicated by pressing one of four radio buttons (student (school)/student(university)/worker/no occupation)
  * The participant can indicate that he or she understood the instructions and the correctness of his or her demographic information by pressing a checkbox.
  * A button will be used to advance to the next section of the test
First, the radio buttons to indicate gender are created:
  * Click the button that shows a selected radio button (marked below)
 
  * Enter gender for the Name, and enter m as Value, and click OK
 
  * Enter Male in the text editor right next to the radio button that appeared in the template
  * Create another radio button that has also gender as its Name, but f for the Value and enter Female in the text editor next to the second button
  * Add a text prompting a response in front of the radio buttons (e.g. “Gender:”
Next, a text field is created to allow the participant to enter his or her age. Make sure to start a new line.
  * Click the button that shows an empty text field with a cursor in it (marked below)
 
  * Enter age for the Name and make sure the dropdown menu type has Text selected and click OK
 
  * Enter Age: next to the text field that appeared in the template
Then, the radio buttons to indicate occupation are created. Make sure to start a new line.
  * Create four radio buttons with occupation as their Names, and the Values 1, 2, 3, and 4. Don’t forget to name these buttons in the editor by writing Student (School), Student (University), Working, and Unoccupied, next to the respective buttons. 
The next item added is the checkbox for confirming of having understood the instruction and the correctness of the data provided:
  * Click the button that shows a checked checkbox (marked below)
 
  * Enter confirm for the Name and 1 for the Value
  * Make sure that the Selected option is not selected and press OK
 
  * Enter a text prompting the user to click the checkbox to confirm the correctness of his or her demographic data and that he or she understood the instructions of the test next to the checkbox that appeared in the template.
Finally, a button is added that allows the participant to proceed to the next page. Make sure to start a new line.
  * Click the button that shows a button (marked below)
 
  * Enter continue for the Name, Start the Test for the Text/Value
  * Make sure the dropdown menu for Type has “Button” selected and click OK
 
You are done designing the welcome template. Click save on the bottom of the page. 
 

For reference, your template should look similar to this: