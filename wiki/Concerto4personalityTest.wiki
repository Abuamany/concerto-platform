#summary This tutorial helps the reader to deepen his or her understanding of Concerto v4 by creating a personality test (nonadaptive).

= Introduction =

This tutorial intends to help you create a psychological test (non-adaptive) with Concerto. By taking the reader through the entire process of implementing a test – from analyzing the test and determining what type of pages and data tables are required, over creating both templates and tables, to writing the test logic in R – his or her understanding of R and the Concerto platform should be furthered.
It is assumed that the reader already familiarized him- or herself with the Concerto platform (i.e. took one of the simple tutorials) and has a basic understanding of R or any other experience in programming/scripting languages
The test that will be implemented in this tutorial is the Big Five Personality Test. It consists of 50 Questions that can be answered on a five point Likert scale, with options ranging from “disagree” to “agree”. A sample can be accessed at http://personality-testing.info/print/big-five-personality-test.pdf
In addition to the test itself, three demographical variables are going to be assessed: age, gender, and occupation. At the end of the test, the participant will be informed of his or her result, along with an explanation of these results.


= Preparation =
== Pages ==

In order to create this test on Concerto, it needs to be considered what type of pages needs to be shown to a participant to fulfill the requirements above.
  # Introductory page: upon starting the test, the participant should see some introductory words about the test. At the same page he or she can enter the demographic information
  # Question page: the test itself consists of 50 questions that need to be asked. Therefore there needs to be a page where the questions are asked
  # Result/Goodbye page:  once a participant answered all questions, his or her results are going to be shown to him, along with an explanation
Therefore, we already know that three pages are required.  The next step is to determine, what kind of data is going to be used in the test.

== Data/Tables ==

The only input that comes from the database, are 
  * the questions
  * their scoring information

Data that is going to be stored in the tables are
  * the demographical data
  * the responses to each question
  * the final scores
Data that is going to be stored in the tables are
  * the demographical data
  * the responses to each question
  * the final scores
It is sensible to store the final scores as well as the demographical data together, and the single response to each question separately. Summarizing, there will be the following tables:
  * a table containing the questions and their scoring information
  * a table containing the demographical data and the final scores
  * a table containing item-level data (i.e. response to each question)
After determining how many tables and pages are required to administer the test, it is advisable to think of the rough structure of the test in terms of administration.
Test administration
It is assumed, for this tutorial, that all questions have to be answered and all demographic information has to be filled in. 
  # show the introductory page to the participant
    # participant fills in demographic data and presses OK: continue
    # participant does not fill in demographic data and presses OK: do nothing
  # show the question page and ask the ‘next’ question (if available)
    # participant chooses an answer and presses OK: continue
    # participant does not choose an answer and presses OK: repeat question
  # once the participant answered all questions, calculate the scores
  # show the result page along with the explanations
This list should help in terms of how to write the actual R code to administer the test exactly as is required. Together with the previous points, it is now possible to set up the tables, the pages, and start to structure the test-logic file. The next section explains step by step how to do these things, which are summarized in the list below:
  *create tables holding 
    * the questions
    * result & demographic data
    * question responses
  *create pages
    * introduction/demographic page
    * question page
    * result page
  *structure test logic file
Creating the pages (HTML templates)