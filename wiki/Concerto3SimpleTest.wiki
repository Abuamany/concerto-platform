#labels Featured,Tutorial
= Concerto v3.0 Tutorials: Create a simple test =
                            
This tutorial will help you create a simple test on Concerto v3.0. 
You can preview the test here: *[http://dev.myiqtest.org/concerto3_demo/index.php?tid=61 Concerto v3.0 Simple Test]*

Note:
 * This document is relevant to Concerto v3.0. If you use an older version, please upgrade it (or else refer to relevant tutorials).
 * You may experience some problems while using different browsers. Currently, it is best to use Google Chrome to run the administration panel.


==Login to Concerto==
It is best to use Google Chrome to run the Concerto administration panel. Please ensure that you have Concerto v3.0, the latest version. Go to *concerto_installation_path/cms/* and login using your credentials. If you haven't installed Concerto on your server, you can use our demo installation. Email [mailto:vm298@cam.ac.uk?cc=mk583@cam.ac.uk&subject=Concerto%20demo%20account Ms. Vaishali Mahalingam] to get a demo account. 

Demo installation: [http://concerto.e-psychometrics.com/demo/cms/index.php]


==Concept==

The test you create will be composed of three HTML Templates:
 * *Introduction* - where the user can enter his/her name that will be used later to customise other HTML templates.
 * *Test items* - with dichotomous (yes/no) response options.
 * *Feedback* - containing the user's score.
 
_Adaptivity is not used in this tutorial, but you will see how and where a bit of adaptive code can be added._


==Step 1: Create HTML Templates==
===Introduction template===
 * _Create a template:_ Click the “HTML templates” tab on the upper left side of the page. Click the ‘+’ icon at the end of the list of templates to add a new item. Enter a unique name for the template (E.g. “introduction”) and click ‘save’ at the bottom of the page.  
 * _Add suitable text:_ Type in a welcome message and instructions for the participants. 
 * _Add a user input field:_ Click ‘Text Field’ and enter a name (E.g. user_name). Click ‘OK’. Ensure that your instructions indicate that participants should type their name here.
 * _Add a Start button:_ Click ‘Button’ and enter a name (e.g. btn_start), text (“Start”) and click ‘OK’.
 * Save the template!

http://ns39618.ovh.net/~vaishali/simple/intro.jpg


=== Test Items Template===
 * _Create a template:_ Click the “HTML templates” tab on the upper left side of the page. Click ‘+’ at the end of the list of templates to add a new item. Enter a name for the template (E.g. “items”) and click ‘save’ at the bottom of the page. 
 * _Add questions/text:_ Edit the template and add the following text:
    {{user_name}}, please answer the following question:
    {{question}}
 * _Add radio buttons:_ Click ‘Radio Button’ and assign a name (radio1) and value (0); click ‘OK’. Type ‘No’ next to it. Similarly, create another radio button with the same name but different value (1) and type ‘Yes’ next to it.
 * _Add a Submit button:_ Click ‘Button’ and assign a name (btn_submit) and text value (Submit). Click ‘OK’.
 * Save the template!

http://ns39618.ovh.net/~vaishali/simple/items.jpg


===Feedback Template===
 * _Create a template:_ Click the “HTML templates” tab on the upper left side of the page. Click ‘+’ at the end of the list of templates to add a new item. Enter a name for the template (E.g.“feedback”) and click ‘save’ at the bottom of the page. 
 * _Add text:_ Add text suitable for the feedback page, including:
    {{user_name}}, your total score is {{total_score}}.
 * Save the template!

http://ns39618.ovh.net/~vaishali/simple/feedback.jpg


==Step 2: Creating an item bank==

Go to the ‘tables’ tab (next to HTML templates). 
 * _Add a new table:_ Click the ‘+’ icon at the end of the list of available tables. Assign a name and save it.
 * _Add columns:_ Click the ‘+’ icon located just below table structure and data field. Enter the column name (“question”) and select string as the data type. Click ‘ok’. 
 * _Add additional columns:_ Click the ‘+’ icon on the right side of the column names. Add a second column (“answer”) consisting of numeric type data and a third column (“item_id”) consisting of numeric type data.
_Your item bank is nearly done. Now you need to fill the table with the items in your test. The items should be structured such that they can be answered with yes/no options, as in your “items” template._
 * _Add rows:_ Click the ‘+’ icon below the column names. Now, you can directly type in your items and corresponding answers. 
 Note: In your Items template, you have assigned 0 to a radio button described as “No” and 1 to a radio button described as “Yes”. Thus, if “yes” is the correct answer to your question – put 1 in the Answer column. If “no” is the correct answer, put 0 in the Answer column. Fill item_id with consecutive numbers starting from 1.
 * Save your table!

_Note: You can import your tables from CSV files (R, SPSS, Excel) and also manage tables using a professional MySQL tool._

http://ns39618.ovh.net/~vaishali/simple/tables.jpg


==Step 3: Creating and adding sections to your test==

Go to the ‘tests’ tab on the upper left side of the page. Create a new test logic by clicking the ‘+’ icon towards the bottom of the list of available tests (it is likely to be empty!), on the left side of the page. Assign a relevant name for the test and click ‘OK’. 

To edit a test at any time, click on the pencil symbol towards the right of the specific test you want to edit. Be careful not to click the ‘bin’ icon (last symbol on the right) unless you wish to delete your test!

This step involves editing your test overall. Click the ‘tests’ tab on the upper left side of the page and click the _pencil_ icon on your specific test to edit it. To add a new section, click the ‘+’ at the bottom of the last section. At this point, the last section is ‘1. start’.

Follow the table below to add new sections to your test, using the editor. Be careful not to make spelling errors!

|| *SECTION TYPE* || *DETAILS* ||
|| Load HTML template || Choose the HTML template: _introduction_ (or whatever name you gave to this HTML template). Please note that this HTML template will provide you with “user_name” variable in 'R & HTML' AS 'default' (indicated in “returns:”). _(Remember adding text field “user_name” to this HTML template?)_ ||
|| Set variable || SET VARIABLE:  _current_question_  IN  _R & HTML_  AS  _numeric_  by R code:  _1_.  (We will use this variable to control which question to show!)||
|| - || http://ns39618.ovh.net/~vaishali/simple/test1.jpg ||

|| *SECTION TYPE* || *DETAILS* ||
|| Set variable || SET VARIABLE:  _total_score_  IN  _R & HTML_  AS  _numeric_  by R code:  _0_.  (This variable will be used to count the total score of the individual.)||
|| Set variable || SET VARIABLE: _question_  IN  _R & HTML_  AS  _default_  from table: _simple_test_table_  COLUMN: _question_  WHERE: _item_id_ - _equal_ - _current_question_.  (Note what happens - we simply select one cell from the table you’ve created earlier. Concerto will take the content of the cell in the “question” column and a row where item_id equals 1 (you have set current_question to 1 few steps ago))||
|| Set variable || SET VARIABLE: _answer_  IN  _R & HTML_  AS  _default_  from table: _simple_test_table_  COLUMN: _answer_  WHERE: _item_id_ - _equal_ - _current_question_.  (Now we set variable “answer” to the appropriate value from the table.)||
|| - || http://ns39618.ovh.net/~vaishali/simple/test2.jpg ||

|| *SECTION TYPE* || *DETAILS* ||
|| Load HTML template || Choose the HTML template: _items_ (or whatever name you gave to this HTML template). ||
|| IF statement || IF _is.na(radio1)_ - _equal_ - _T_  THEN CLICK '+' ICON BELOW 'THEN'. GO TO SECTION: _load items template_ (i.e. go to the previous section in your test. This step presents the testee with the same item if no radio button is selected.) ||
|| IF statement || IF _answer_ - _equal_ - _radio1_  THEN CLICK '+' ICON BELOW 'THEN'. SET VARIABLE: _total_score_  IN _R & HTML_  AS _numeric_  by R code - _total_score + 1_. (Simple! *If* answer is equal to the value of the radio button selected by the user *then* increase total score by 1. _Note: to add the next section “outside of the if clause” use the ‘+’ icon at the very bottom of the entire IF statement box._)||
|| - || http://ns39618.ovh.net/~vaishali/simple/test-3.jpg ||

|| *SECTION TYPE* || *DETAILS* ||
|| Set variable || SET VARIABLE:  _current_question_  IN _R & HTML_  AS _default_  by R code:  _current_question + 1_.  (Add one to the current_question value to select the 2nd question from the table next time!)||
|| IF statement || IF _current_question_ - _equal or lesser than_ - _4_ THEN CLICK '+' ICON BELOW 'THEN'. GO TO - SET SECTION: _(from the drop-down list select the section of the test you want to GO TO. You want to the section where you were setting the value of the “question” variable)_ Ok, this one looks difficult but it is not! First you check *if* you haven’t reached the maximum number of questions you wanted to show. If you haven’t *then* you go back in the test structure –not to the very beginning but to the place where you were getting some values from the table. Lastly, click the ‘+’ at the bottom of the *IF statement box* to add a new section.||
|| Load HTML template || Choose the HTML template: _feedback_ (or whatever else you named this template)||
|| - || http://ns39618.ovh.net/~vaishali/simple/test-4.jpg ||
|| || _END_ ||


To run your test, use the following URL: 
*(concerto_installation_path)/?tid=(TEST_ID)*

In case of the demo installation, this link looks like this: [http://concerto.e-psychometrics.com/demo/?tid=69] 

  _Note: Substitute the last 2 digits in the URL with the _test id_ of your specific test._


Obviously, this is a very basic test, but it easily shows the idea behind Concerto. The tests that you develop can be run as a separate website or embedded in the other websites or applications. 
 