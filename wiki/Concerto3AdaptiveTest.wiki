#labels Tutorial,Featured
.
= Concerto v3.0 Tutorials: Create an adaptive test =
                            
This tutorial will show you how to create a simple adaptive test on Concerto v3.4 that looks like this: 
[http://concerto.e-psychometrics.com/demo/?tid=80 Concerto v3.4 Adaptive test]

It is assumed that you’ve already taken the *[http://code.google.com/p/concerto-platform/wiki/Concerto3SimpleTest Concerto v3.0 Tutorials: Create a simple test]* section and are familiar with the basic functions of Concerto v3.

*Note:*
 * If you use an older version, please upgrade it (or else refer to relevant tutorials).
 * You may experience some problems while using different browsers. Currently, it is best to use Google Chrome to run the administration panel.

.
==Login to Concerto==
It is best to use Google Chrome to run the Concerto administration panel. Please ensure that you have Concerto v3.0, the latest version. Go to *concerto_installation_path/cms/* and login using your credentials. If you haven't installed Concerto on your server, you can use our demo installation. Email [mailto:vm298@cam.ac.uk?cc=mk583@cam.ac.uk&subject=Concerto%20demo%20account Ms. Vaishali Mahalingam] to get a demo account. 

Demo installation: [http://concerto.e-psychometrics.com/demo/cms/index.php]

.
==Step 1: Create HTML Templates==

===Introduction template===

Create a new template called _introduction_ and add some suitable text to describe the test and make testees feel comfortable. 

http://ns39618.ovh.net/~vaishali/v3.4/adaptive/intro.jpg

.
===Test item template===
Create a new template called _test item_ and add the following content:
 * *{{question}}* insert  that will be filled by concerto
 * "*=*" sign
 * An input *text field* called "*response*" 
  * Ensure you call this text field "*response*" as that's how we refer to it in R code. You can give it a different name, but you will have to change R code accordingly.
  * If you don't know how to add a text field, see the *Concerto v3.0 Tutorials: Create a simple test* section.
 * A button called "*Submit*"
 * For presentation purposes, add the field *{{theta}}*.

http://ns39618.ovh.net/~vaishali/v3.4/adaptive/items.jpg

.
===Feedback template===
Create another new template called _feedback_ that contains:
 * A suitable title
 * A few words of empathic feedback
 * Fields *{{theta}}*, *{{sem}}* 

http://ns39618.ovh.net/~vaishali/v3.4/adaptive/feedback.jpg

.
==Step 2: Creating an Item Bank/Table from a CSV File==

The next step is to create an item bank for the test. Usually, software like R and LTM package are used to generate item parameters. Here, let’s use a mock-up item bank with only one item parameter (difficulty) which can be generated using the Rasch model.

Download and unzip this CSV file: [http://ns39618.ovh.net/wiki2/_media/public/ibank.zip] and explore it using Excel or notepad. 

Go to the *tables* tab and click the ‘+ add new object’ icon to add a new table. Assign a meaningful name (E.g. adaptive_test) and save it. 
Click the _import table from CSV file_ icon to import a table that you have downloaded. Concerto will automatically read the data into table format. All you need to do is alter the column names and the data types.

http://ns39618.ovh.net/~vaishali/v3.4/adaptive/table.jpg

.
==Step 3: Creating a test and adding sections==

In the 'tests' tab, create a new test by adding a new object. Follow the images and corresponding text to create the structure of your test by adding new sections.
.

|| *SECTION TYPE* || *DETAILS* ||
|| Load HTML template || Select the _introduction_ template (or whatever you named it)||
|| Set variable || SET VARIABLE *theta* by R code - _"Score not available yet"_||
|| Set variable || SET VARIABLE *difficulties* from table _adaptive_test_table_ (or whatever you named it); COLUMNS *difficulty* ||
|| Set variable || SET VARIABLE *current_item* by R code - _50_||
|| - || http://ns39618.ovh.net/~vaishali/v3.4/adaptive/test1.jpg ||
.

|| *SECTION TYPE* || *DETAILS* ||
|| Set variable || SET VARIABLE *responses* by R code - _NULL_||
|| Set variable || SET VARIABLE *itempar* by R code - _as.matrix(cbind(1,difficulties,0,1))_||
|| Set variable || SET VARIABLE *catBank* by R code - _createItemBank(itempar,model="1pl")_||
|| Set variable || SET VARIABLE *items_administered* by R code - _current_item_||
|| Set variable || SET VARIABLE *question* from table _adaptive_test_table_ (or whatever you named it); COLUMNS *content* WHERE *id* - *equal* - *current_item* ||
|| - ||  http://ns39618.ovh.net/~vaishali/v3.4/adaptive/test2.jpg  ||
.

|| *SECTION TYPE* || *DETAILS* ||
|| Set variable || SET VARIABLE *difficulty* from table* _adaptive_test_table_ (or whatever you named it); COLUMNS *difficulty* WHERE *id* - *equal* - *current_item* ||
|| Set variable || SET VARIABLE *correct_answer* from table _adaptive_test_table_ (or whatever you named it); COLUMNS *correct_answer* WHERE *id* - *equal* - *current_item* ||
|| Load HTML template || Select the _test_items_ template (or whatever you named it).||
|| - ||  http://ns39618.ovh.net/~vaishali/v3.4/adaptive/test3.jpg  ||
.

|| *SECTION TYPE* || *DETAILS* ||
|| IF statement || *is.na(response)* - *equal* - *1* THEN _GO TO_ *14.load HTML template* (this is the section where you load the items template). This step is to ensure that there are no missing responses or non-numeric type responses. ||
|| Set variable || SET VARIABLE *responses* by R code - _c(responses, correct_answer == response)_||
|| Set variable || SET VARIABLE *theta* by the following TWO lines of R code: _it<-matrix(itempar[items_administered,],nrow=length(items_administered))_; and in the new line: _thetaEst(it, responses)_||
|| Set variable || SET VARIABLE *current_item* by R code - _nextItem(catBank, theta, out=as.numeric(items_administered)){{{[[1]]}}}_||
|| - ||  http://ns39618.ovh.net/~vaishali/v3.4/adaptive/test4.jpg  ||
.

|| *SECTION TYPE* || *DETAILS* ||
|| Set variable || SET VARIABLE *items_administered* by R code - _c(items_administered, current_item)_||
|| Set variable || SET VARIABLE *nitems* by R code - _length(items_administered)_||
|| IF statement || *nitems* - *equal or lesser than* - *15* THEN _GO TO_ *11.set variable* (this is the section where you set the variable "question") ||
|| Load HTML template || Select _feedback_ template (or whatever else you named it) ||
|| - ||  http://ns39618.ovh.net/~vaishali/v3.4/adaptive/test5.jpg  ||
|| - || *_END_* ||
.

Don't forget to save the test at regular intervals!

.
==Run your test==
Use the following URL (with the correct *test id* to run your test: *[concerto_installation_path]/?tid=[TEST_ID]*

In case of the demo installation, the link looks like this: [http://concerto.e-psychometrics.com/demo/?tid=69] 

  _Note: Substitute the last 2 digits in the URL with the test id of your choice._
.