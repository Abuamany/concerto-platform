=Concerto R package=

==general concept==

Since Concerto v4 has a code auto-complete function and an R function documentation (available for any R package installed on your system) available for users writing code, we decided to include Concerto built-in functions also as an R package.

----

==concerto.qti.get==

Retrieves specific QTI object info.

====arguments====

 * *qtiID* - ID or name of the QTI you want to get
 * *workspaceID* - if you want to get a QTI from a different workspace than where the test is located, specify the relevant workspace ID here.

====returns====

List with QTI object properties:
 * *id* - QTI object ID
 * *name* - QTI object name
 * *ini_r_code* - QTI object R code evaluated at QTI initialization
 * *response_proc_r_code* - QTI object R code evaluated at QTI response processing

====example====

{{{qti <- concerto.qti.get(1)}}}

{{{qti <- concerto.qti.get("second_qti")}}}

----

==concerto.template.show==

The most important of all functions in the package. It informs your test logic that it's time to show  a specific HTML template to test participants.

====arguments====

 * *templateID* - ID or name of the template you want to show
 * *HTML* - HTML entered directly
 * *head* - head tag entered directly
 * *params* - named list with parameters you want to pass to the template
 * *timeLimit* - number of seconds after which template will be auto submitted (0 for no limit)
 * *finalize* - set to TRUE if there is nothing more to do for your test logic after this template
 * *workspaceID* - if you want to use a template from a different workspace than where the test is located, specify the relevant workspace ID here.
 * *effectShow* - template show effect entered directly
 * *effectHide* - template hide effect entered directly
 * *effectShowOptions* - template show effect options entered directly
 * *effectHideOptions* - template hide effect options entered directly

====returns====

Returns named list with the variable gathered from the template and:

 * *LAST_PRESSED_BUTTON_NAME* - name of the button that submitted the template
 * *OUT_OF_TIME* - 1 if the set time limit has been reached, 0 if not
 * *TIME_TAKEN* - how much time has it taken user to submit the template

====example====

{{{response <- concerto.template.show(1)}}}

{{{response <- concerto.template.show("first_template")}}}

{{{response <- concerto.template.show(HTML="Please click the button: <button>click me</button>")}}}