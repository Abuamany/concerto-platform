= TUTORIAL: How to create a simple test =

== Concept ==
Here we show how to create a simple test composed of three elements:
 * *Introduction* where user can enter her name, which will be later used in other items. 
 * *Test questions* - for simplicity with dichotomous (yes/no) response options. 
 * *Feedback* containing user's score.

This tutorial is based on a very simple item bank declared directly in a code, however, we suggest that in the proper tests you should use item banks stored in the SQL table. 
Also, adaptivity is not used in this tutorial, but you will see how and where adaptive bit of code can be used

== Step 1: create item's presentation ==
=== `demo_start` ===
  * to create a new item click *'new'* button in the form on the left side of *'item'* tab

http://dev.myiqtest.org/concerto2/wiki_images/new_item_click.png

  * enter *'demo_start'* as an item name in the form

http://dev.myiqtest.org/concerto2/wiki_images/enter_name.png

  * go to the *'Presentation and Properties'* tab
  * add text field by clicking it's icon 

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_tb.png

  * set text field name to *field_name* and click *OK*

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_tb_properties.png

  * add button by clicking it's icon

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_btn.png

  * set button's name to *btn_start*, button's label to *Start* and click *OK*

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_btn_properties.png

  * add some text directly to the HTML
  * save the item by clicking *'save'* button

http://dev.myiqtest.org/concerto2/wiki_images/save_click.png

  * summary

We have a button here named *'btn_start'*. We can later assign R code to execute when we click on it while running test.
We also have here a text box named *'field_name'* which will be filled by user running test and we can use it's value later in HTML presentation or in R calculations. The field will contain user name.

This HTML should look like this:

http://dev.myiqtest.org/concerto2/wiki_images/demo_start.png


=== `demo_item` ===
  * to create a new item click *'new'* button in the form on the left side of *'item'* tab
  * enter *'demo_item'* as an item name in the form
  * go to the *'Presentation and Properties'* tab
  * add radio button by clicking it's icon

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_radio.png

  * set it's name to *field_answer*, it's value to *0* and mark that it should be checked by default

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_radio_porperties_no.png

  * add radio button by clicking it's icon
  * set it's name to *field_answer* and it's value to *1* 

http://dev.myiqtest.org/concerto2/wiki_images/ckeditor_radio_porperties_yes.png

  * add button named *btn_next* with label *next* and button named *btn_restart* with label *restart*

  * insert somewhere into the HTML text: *{{field_name}} please answer the question:*
  * insert somewhere into the HTML text: *Question #{{current_question_no}}:*
  * insert somewhere into the HTML text: *{{question}}*

  * save the item by clicking *'save'* button
  * summary
See those double brackets with text inside them? You can insert session variables to your HTML presentation this way. This way *{{question}}* will be replaced by value of session variable named *question*.
On this item we have two buttons used to execute R code and two radio buttons from the same group ( they have the same name: *field_answer* ). Those radio buttons will be used by user running the test to give you the answer. Answer can be *yes* ( radio button value *0* ) or *no* ( radio button value *1* ).

This HTML should look like this:

http://dev.myiqtest.org/concerto2/wiki_images/demo_item.png

=== `demo_feedback` ===
  * to create a new item click *'new'* button in the form on the left side of *'item'* tab
  * enter *'demo_feedback'* as an item name in the form
  * go to the *'Presentation and Properties'* tab
  * insert somewhere into the HTML text: *{{field_name}}, your total score is {{total_score}}.*
  * save the item by clicking *'save'* button
  * summary
Only thing worth mentioning here are double brackets used for session variables insertion. User will see his name and his total score.

This HTML should look like this:

http://dev.myiqtest.org/concerto2/wiki_images/demo_feedback.png

== step 2: assign R code to item's buttons ==
=== `demo_start` ===
  * edit *'demo_start'* item
  * go to the *'R Interaction'* tab where you can assign R code to the item's buttons

We have only one button in this item: *'btn_start'*. Paste this as a *R code to execute*:

http://dev.myiqtest.org/concerto2/wiki_images/r_code.png

{{{
## questions array
x <- array(dim=3)
x[1]<-"Is 3-2=6?"
x[2]<-"Is 2+3=6?"
x[3]<-"Is 3*2=6?"

## correct answers array
y <- array(dim=3)
y[1]<-0
y[2]<-0
y[3]<-1

## set index of first question to show up
current_question_no <- 1
## initialize total score value
total_score <- 0

## set R variables as session variables for use in presentation HTML and set next item to show up
set.var("current_question_no",current_question_no)
set.var("question",x[current_question_no])
set.next.item("demo_item")
}}}

  * save the item by clicking *'save'* button

=== `demo_item` ===
* edit *'demo_item'* item
  * go to the *'R Interaction'* tab where you can assign R code to the item's buttons

We have two buttons here. 
  * *'btn_next'*

Paste this *'R code to execute'*:

{{{
## if answer correct then increment total score value
if(y[current_question_no] == as.numeric(field_answer)) total_score <- total_score + 1
  
## if this isn't the last question then change current question to next one and if it is then show feedback page with total score value
if(current_question_no < 3) {
  current_question_no <- current_question_no + 1
  question <- x[current_question_no]
  set.var("current_question_no",current_question_no)
  set.var("question",question)
} else {
  set.var("total_score",total_score)
  set.next.item("demo_feedback") 	
}
}}}

  * *'btn_restart'*

Paste this *'R code to execute'*:

{{{
## sets item to show up next
set.next.item("demo_start")
}}}

  * save the item by clicking *'save'* button

= and that's all =
You can now run the test you created.

You can either run it in *debug* mode to see what's going on behind the scene. You do it by clicking *'debug'* button next to the item ( *'demo_start'* in this case ).

Or you can run it in normal mode by passing item's *hash* value as an URL argument.

e.g. /index.php?*hash=enter_item_hash_here*

= see live demo here =
[http://dev.myiqtest.org/concerto2/index.php?hash=ab0334826613005bfcf26d52392b7ced click for live demo]